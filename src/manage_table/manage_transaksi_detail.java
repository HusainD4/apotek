/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package manage_table;

import java.awt.Frame;

import konektor.Profile;
import apoteker.admin_page;
import java.awt.Dimension;
import java.awt.Font;
//import konektor.connect;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import konektor.ProfileTransaksiDetail;

/**
 *
 * @author HUSAIN
 */
public class manage_transaksi_detail extends javax.swing.JFrame {

    /**
     * Creates new form manage_transaksi
     */
    ProfileTransaksiDetail TR;
    static DefaultTableModel trs;

    public manage_transaksi_detail() {
        initComponents();
        settingTableTransaksi();
        viewdataTransaksi("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        atas_transaksi = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pencarianTrans = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        label_kembali = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tengah_transaksi = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_transaksi = new javax.swing.JTable();
        bawah_transaksi = new javax.swing.JPanel();
        btn_CetakTransaksi = new javax.swing.JButton();
        btn_MuatUlang = new javax.swing.JButton();
        btn_kembali = new javax.swing.JButton();
        btn_Hapus1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        atas_transaksi.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_transaction_30px_3.png"))); // NOI18N
        jLabel1.setText(" MANAGE TRANSAKSI");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        pencarianTrans.setFont(new java.awt.Font("Rockwell Nova Light", 0, 14)); // NOI18N
        pencarianTrans.setForeground(new java.awt.Color(0, 102, 102));
        pencarianTrans.setText("Pencarian");
        pencarianTrans.setBorder(null);
        pencarianTrans.setSelectionColor(new java.awt.Color(0, 153, 153));
        pencarianTrans.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pencarianTransFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pencarianTransFocusLost(evt);
            }
        });
        pencarianTrans.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pencarianTransKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pencarianTrans, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pencarianTrans, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_search_20px_1.png"))); // NOI18N

        label_kembali.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        label_kembali.setForeground(new java.awt.Color(255, 255, 255));
        label_kembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_left_2_20px.png"))); // NOI18N
        label_kembali.setText("KEMBALI");
        label_kembali.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_kembaliMouseClicked(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout atas_transaksiLayout = new javax.swing.GroupLayout(atas_transaksi);
        atas_transaksi.setLayout(atas_transaksiLayout);
        atas_transaksiLayout.setHorizontalGroup(
            atas_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, atas_transaksiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(atas_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
                    .addGroup(atas_transaksiLayout.createSequentialGroup()
                        .addComponent(label_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jSeparator1)
        );
        atas_transaksiLayout.setVerticalGroup(
            atas_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(atas_transaksiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(atas_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(atas_transaksi, java.awt.BorderLayout.PAGE_START);

        tengah_transaksi.setBackground(new java.awt.Color(0, 102, 102));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbl_transaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "ID_Transaksi", "Tanggal_Pembelian", "Kode Obat", "Jumlah Produk", "Harga Satuan", "Total Harga", "Uang Diterima", "Uang Kembali", "Nama Kasir"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_transaksi.setRowHeight(50);
        jScrollPane1.setViewportView(tbl_transaksi);

        javax.swing.GroupLayout tengah_transaksiLayout = new javax.swing.GroupLayout(tengah_transaksi);
        tengah_transaksi.setLayout(tengah_transaksiLayout);
        tengah_transaksiLayout.setHorizontalGroup(
            tengah_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tengah_transaksiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1152, Short.MAX_VALUE)
                .addContainerGap())
        );
        tengah_transaksiLayout.setVerticalGroup(
            tengah_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tengah_transaksiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(tengah_transaksi, java.awt.BorderLayout.CENTER);

        bawah_transaksi.setBackground(new java.awt.Color(0, 102, 102));

        btn_CetakTransaksi.setText("CETAK TRANSAKSI");
        btn_CetakTransaksi.setBorderPainted(false);
        btn_CetakTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CetakTransaksiActionPerformed(evt);
            }
        });

        btn_MuatUlang.setText("MUAT ULANG");
        btn_MuatUlang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MuatUlangActionPerformed(evt);
            }
        });

        btn_kembali.setText("KEMBALI");
        btn_kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kembaliActionPerformed(evt);
            }
        });

        btn_Hapus1.setText("LIHAT RINGKASAN");
        btn_Hapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Hapus1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bawah_transaksiLayout = new javax.swing.GroupLayout(bawah_transaksi);
        bawah_transaksi.setLayout(bawah_transaksiLayout);
        bawah_transaksiLayout.setHorizontalGroup(
            bawah_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bawah_transaksiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bawah_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bawah_transaksiLayout.createSequentialGroup()
                        .addComponent(btn_MuatUlang, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bawah_transaksiLayout.createSequentialGroup()
                        .addComponent(btn_CetakTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Hapus1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(836, Short.MAX_VALUE))
        );
        bawah_transaksiLayout.setVerticalGroup(
            bawah_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bawah_transaksiLayout.createSequentialGroup()
                .addGroup(bawah_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bawah_transaksiLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btn_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bawah_transaksiLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(bawah_transaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_CetakTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Hapus1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_MuatUlang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        getContentPane().add(bawah_transaksi, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void label_kembaliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_kembaliMouseClicked
        dispose();
    }//GEN-LAST:event_label_kembaliMouseClicked

    private void btn_Hapus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Hapus1ActionPerformed
        PreviewTabelPage.TransaksiView TV = new PreviewTabelPage.TransaksiView(this, true);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        TV.setSize(screenSize.width, screenSize.height);
        TV.setVisible(true);

    }//GEN-LAST:event_btn_Hapus1ActionPerformed

    private void btn_MuatUlangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MuatUlangActionPerformed
        viewdataTransaksi("");
    }//GEN-LAST:event_btn_MuatUlangActionPerformed

    private void btn_kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kembaliActionPerformed
        dispose();
    }//GEN-LAST:event_btn_kembaliActionPerformed

    private void pencarianTransKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pencarianTransKeyReleased
        String key = pencarianTrans.getText();
        String where = "WHERE "
                + "tanggal_transaksi LIKE '%" + key + "%' OR "
                + "kode_obat LIKE '%" + key + "%' OR "
                + "jumlah_produk LIKE '%" + key + "%' OR "
                + "harga_satuan LIKE '%" + key + "%' OR "
                + "total_harga LIKE '%" + key + "%' OR "
                + "Uang_Diterima LIKE '%" + key + "%' OR "
                + "Uang_Kembali LIKE '%" + key + "%' OR "
                + "nama_kasir LIKE '%" + key + "%'";
        viewdataTransaksi(where);
    }//GEN-LAST:event_pencarianTransKeyReleased

    private void pencarianTransFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pencarianTransFocusLost
        String Cari = pencarianTrans.getText();
        if (Cari.equals("") || Cari.equals("Pencarian")) {
            pencarianTrans.setText("Pencarian");
        }

    }//GEN-LAST:event_pencarianTransFocusLost

    private void pencarianTransFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pencarianTransFocusGained
        String Cari = pencarianTrans.getText();
        if (Cari.equals("Pencarian")) {
            pencarianTrans.setText("");
        }
    }//GEN-LAST:event_pencarianTransFocusGained

    private void btn_CetakTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CetakTransaksiActionPerformed
        // Membuat PrinterJob untuk menangani pencetakan
        PrinterJob printerJob = PrinterJob.getPrinterJob();

// Menentukan PageFormat untuk kertas A4 dengan orientasi landscape
        PageFormat pageFormat = printerJob.defaultPage();

// Set orientasi ke landscape
        pageFormat.setOrientation(PageFormat.LANDSCAPE); // Menetapkan orientasi menjadi landscape

        Paper paper = new Paper();
        double width =  595;  // Lebar A4 dalam point untuk landscape
        double height = 842; // Tinggi A4 dalam point untuk landscape
        paper.setSize(width, height);
        paper.setImageableArea(50, 50, width - 100, height - 100); // Area yang bisa dicetak (memberi margin)
        pageFormat.setPaper(paper);

// Membuat objek Printable untuk mendefinisikan cara mencetak
        Printable printable = new Printable() {
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                if (pageIndex > 0) {
                    return NO_SUCH_PAGE; // Jika lebih dari satu halaman
                }

                Graphics2D g2d = (Graphics2D) graphics;
                g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());

                // Mengatur font dan ukuran tulisan
                g2d.setFont(new Font("Serif", Font.PLAIN, 10));

                // Mengambil data dari JTable
                JTable table = tbl_transaksi; // Pastikan LAPORAN_PENJUALAN adalah objek JTable
                TableModel model = table.getModel();

                // Menulis header tabel
                int y = 20; // Posisi awal vertikal
                int x = 50; // Posisi awal horizontal
                int rowHeight = 20; // Tinggi baris
                int columnWidth = 100; // Lebar kolom

                // Menulis header tabel
                for (int col = 0; col < model.getColumnCount(); col++) {
                    g2d.drawString(model.getColumnName(col), x + col * columnWidth, y);
                }

                y += rowHeight; // Pindah ke baris berikutnya

                // Menulis data tabel
                for (int row = 0; row < model.getRowCount(); row++) {
                    for (int col = 0; col < model.getColumnCount(); col++) {
                        g2d.drawString(model.getValueAt(row, col).toString(), x + col * columnWidth, y);
                    }
                    y += rowHeight;

                    // Cek jika baris melebihi batas halaman, jika iya, lanjutkan ke halaman berikutnya
                    if (y > height - 50) { // Jika melebihi batas halaman, lanjut ke halaman baru
                        return PAGE_EXISTS; // Halaman berikutnya
                    }
                }

                return PAGE_EXISTS; // Menyelesaikan pencetakan untuk halaman ini
            }
        };

// Menentukan pencetak yang digunakan untuk mencetak dokumen
        printerJob.setPrintable(printable, pageFormat);

// Menampilkan dialog untuk mencetak
        if (printerJob.printDialog()) {
            try {
                printerJob.print(); // Mencetak dokumen
            } catch (PrinterException e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_btn_CetakTransaksiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manage_transaksi_detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manage_transaksi_detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manage_transaksi_detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manage_transaksi_detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            manage_transaksi_detail MT = new manage_transaksi_detail();
            MT.setExtendedState(Frame.MAXIMIZED_BOTH);
            //L.setAlwaysOnTop(true); 
            MT.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel atas_transaksi;
    private javax.swing.JPanel bawah_transaksi;
    private javax.swing.JButton btn_CetakTransaksi;
    private javax.swing.JButton btn_Hapus1;
    private javax.swing.JButton btn_MuatUlang;
    private javax.swing.JButton btn_kembali;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel label_kembali;
    private javax.swing.JTextField pencarianTrans;
    private javax.swing.JTable tbl_transaksi;
    private javax.swing.JPanel tengah_transaksi;
    // End of variables declaration//GEN-END:variables

    public static void viewdataTransaksi(String where) {
        try {

            for (int i = trs.getRowCount() - 1; i >= 0; i--) {
                trs.removeRow(i);
            }

            Connection K = konektor.connect.Go();
            Statement S = K.createStatement();
            // Construct SQL query

            String Q = "SELECT * FROM transaksi_detail " + where;
//            System.out.println(Q);
            ResultSet R = S.executeQuery(Q);
            int no = 1;
            while (R.next()) {
                int ID_Trans = R.getInt("ID_transaksi_detail");
                String Tanggal_Transaksi = R.getString("tanggal_transaksi");
                String Kode_Obat = R.getString("kode_obat");
                String Jumlah_Produk = R.getString("jumlah_produk");
                String Harga_Satuan = R.getString("harga_satuan");
                String Total_harga = R.getString("total_harga");
                String Uang_Diterima = R.getString("Uang_Diterima");
                String Uang_Kembali = R.getString("Uang_Kembali");
                String Nama_Kasir = R.getString("nama_kasir");

                Object[] transs = {no, ID_Trans, Tanggal_Transaksi, Kode_Obat, Jumlah_Produk, Harga_Satuan, Total_harga, Uang_Diterima, Uang_Kembali, Nama_Kasir};
                trs.addRow(transs);
                no++;
            }
        } catch (SQLException e) {
            e.printStackTrace();

        }
    }

    private void settingTableTransaksi() {
        trs = (DefaultTableModel) tbl_transaksi.getModel();
        tbl_transaksi.getColumnModel().getColumn(0).setMinWidth(50);
        tbl_transaksi.getColumnModel().getColumn(0).setMaxWidth(70);

        tbl_transaksi.getColumnModel().getColumn(1).setMinWidth(0);
        tbl_transaksi.getColumnModel().getColumn(1).setMaxWidth(0);

        tbl_transaksi.getColumnModel().getColumn(2).setMinWidth(140);
        tbl_transaksi.getColumnModel().getColumn(2).setMaxWidth(140);

        tbl_transaksi.getColumnModel().getColumn(3).setMinWidth(120);
        tbl_transaksi.getColumnModel().getColumn(3).setMaxWidth(120);

        tbl_transaksi.getColumnModel().getColumn(4).setMinWidth(120);
        tbl_transaksi.getColumnModel().getColumn(4).setMaxWidth(120);

        tbl_transaksi.getColumnModel().getColumn(5).setMinWidth(140);
        tbl_transaksi.getColumnModel().getColumn(5).setMaxWidth(140);

        tbl_transaksi.getColumnModel().getColumn(6).setMinWidth(140);
        tbl_transaksi.getColumnModel().getColumn(6).setMaxWidth(140);
    }

}
