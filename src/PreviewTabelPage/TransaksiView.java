/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package PreviewTabelPage;

import java.awt.Frame;

import konektor.Profile;
import apoteker.admin_page;
//import konektor.connect;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFrame;
import konektor.ProfileTransaksiDetail;

/**
 *
 * @author HUSAIN
 */
public class TransaksiView extends javax.swing.JDialog {

    /**
     * Creates new form TransaksiView
     */
    ProfileTransaksiDetail TR;
    static DefaultTableModel trs;
    static DefaultTableModel TperR;

    public TransaksiView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        settingTableTransaksi();
        viewdataTransaksi("");
        settingTableTransaksiPerKasir();
        viewTotalTransaksiPerKasir("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label_kembali = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_transaksi = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_totalTransaksiPerKasir = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        label_kembali.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        label_kembali.setForeground(new java.awt.Color(255, 255, 255));
        label_kembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_left_2_20px.png"))); // NOI18N
        label_kembali.setText("KEMBALI");
        label_kembali.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_kembaliMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(label_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1129, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(label_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 42, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbl_transaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "KODE TRANSAKSI", "JUMLAH TRANSAKSI", "NAMA KASIR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_transaksi.setRowHeight(40);
        jScrollPane1.setViewportView(tbl_transaksi);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(0, 153, 102));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TOTAL TRANSAKSI PERKASIR");
        jLabel1.setOpaque(true);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbl_totalTransaksiPerKasir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAMA KASIR", "TOTAL TRANSAKSI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_totalTransaksiPerKasir.setRowHeight(40);
        jScrollPane2.setViewportView(tbl_totalTransaksiPerKasir);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void label_kembaliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_kembaliMouseClicked
        dispose();
    }//GEN-LAST:event_label_kembaliMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransaksiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransaksiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransaksiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransaksiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TransaksiView dialog = new TransaksiView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_kembali;
    private javax.swing.JTable tbl_totalTransaksiPerKasir;
    private javax.swing.JTable tbl_transaksi;
    // End of variables declaration//GEN-END:variables
    public static void viewdataTransaksi(String where) {
        try {
            // Menghapus baris pada tabel jika ada data sebelumnya
            for (int i = trs.getRowCount() - 1; i >= 0; i--) {
                trs.removeRow(i);
            }

            // Koneksi ke database
            Connection K = konektor.connect.Go();
            Statement S = K.createStatement();

            // Query SQL
            String Q = "SELECT t.kode_transaksi, COUNT(*) AS jumlah_transaksi, a.FULLNAME AS nama_kasir "
                    + "FROM transaksi t "
                    + "LEFT JOIN `user` a ON t.ID_AKUN = a.ID_AKUN "
                    + "GROUP BY t.kode_transaksi, a.FULLNAME "
                    + "ORDER BY jumlah_transaksi DESC "
                    + "LIMIT 0, 25;";

            ResultSet R = S.executeQuery(Q);
            int no = 1;

            // Iterasi hasil query
            while (R.next()) {
                Object[] transs = {
                    no, // Nomor Urut
                    R.getString("kode_transaksi"), // KODE TRANSAKSI
                    R.getInt("jumlah_transaksi"), // JUMLAH TRANSAKSI
                    R.getString("nama_kasir") // NAMA KASIR
                };

                trs.addRow(transs); // Menambahkan baris ke tabel
                no++;
            }

            // Menutup koneksi
            R.close();
            S.close();
            K.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    // Inisialisasi Model Tabel
    private void settingTableTransaksiPerKasir() {
        TperR = new DefaultTableModel(new Object[]{"Nama Kasir", "Jumlah Transaksi"}, 0);
        tbl_totalTransaksiPerKasir.setModel(TperR);
    }

// Mengisi Tabel
    public static void viewTotalTransaksiPerKasir(String string) {
        try {
            // Menghapus data lama pada tabel
            TperR.setRowCount(0);

            // Koneksi ke database
            Connection K = konektor.connect.Go();
            Statement S = K.createStatement();


        // Query SQL
        String Q = "SELECT " +
                   "a.ID_AKUN AS id_akun, " +
                   "a.FULLNAME AS nama_kasir, " +
                   "COUNT(t.kode_transaksi) AS jumlah_transaksi " +
                   "FROM transaksi t " +
                   "LEFT JOIN user a ON t.ID_AKUN = a.ID_AKUN " +
                   "GROUP BY a.ID_AKUN, a.FULLNAME " +
                   "ORDER BY jumlah_transaksi DESC;";

            ResultSet R = S.executeQuery(Q);

     
        // Iterasi hasil query dan menambahkan ke tabel
        while (R.next()) {
            Object[] rowData = {
                R.getString("nama_kasir"),      // Nama Kasir
                R.getInt("jumlah_transaksi")   // Jumlah Transaksi
            };
            TperR.addRow(rowData);
        }
            // Menutup koneksi
            R.close();
            S.close();
            K.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }


    private void settingTableTransaksi() {
        // Inisialisasi model tabel dari JTable
        trs = (DefaultTableModel) tbl_transaksi.getModel();

        // Mengatur lebar kolom pada tabel
        int[][] columnSizes = {
            {30, 30}, // Kolom 0: Minimum 50, Maksimum 50 (No)
            {140, 140}, // Kolom 1: Minimum 140, Maksimum 140 (Kode Transaksi)
            {140, 140}, // Kolom 2: Minimum 140, Maksimum 140 (Jumlah Transaksi)
            {140, 400} // Kolom 3: Minimum 140, Maksimum 140 (Nama Kasir)
        };

        // Iterasi pengaturan ukuran setiap kolom
        for (int i = 0; i < columnSizes.length; i++) {
            tbl_transaksi.getColumnModel().getColumn(i).setMinWidth(columnSizes[i][0]);
            tbl_transaksi.getColumnModel().getColumn(i).setMaxWidth(columnSizes[i][1]);
        }
    }
}
